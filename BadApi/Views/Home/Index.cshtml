@model BadApi.Models.ViewModel

@{
    ViewBag.Title = "Get your Tweets";
    var totalUniqueTweets = 11693;
}

<div class="jumbotron">
    <h2>BadApi Application!</h2>
    <p class="lead">You can get all the tweets from 2016-2017 or you can search for a certain tweet based on its content.</p>    
</div>

<div class="row">
    <div class="col-md-3">

        <h4>Search Options</h4>
        <label for="alltweets">Search All 2016-2017</label>
        <a id="alltweets" href="/tweets" class="btn btn-info">Search All</a>
        <br />
        <br />
        @using (Html.BeginForm("TweetsById", "Home", FormMethod.Post))
        {
            <label for="alltweets">Search by Id</label>
            @Html.TextBoxFor(model => model.Id)
            <button type="submit" class="btn btn-primary">Submit</button>
        }

    </div>
    <div class="col-md-9">        
        @if (Model.Tweets != null && Model.Tweets?.Count() != totalUniqueTweets)
        {
            <h3>Here are the Tweet(s) you requested.</h3>
            if (Model.Tweets.Count() != 1)
            {
                <p>If the count doesn't come out to be our calculated @totalUniqueTweets, then boo hoo on us and we just ruined the user experience by spitting out 1,000s of tweets:(</p>                
            }
            <p>Total Request Seconds: <strong>@Model.RequestSeconds</strong></p>
            <table>
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Time Stamp</th>
                        <th>Tweet</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tweet in Model.Tweets)
                    {
                        <tr>
                            <td>@tweet.Id</td>
                            <td>@tweet.Stamp</td>
                            <td>@tweet.Text</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else if (Model.Tweets?.Count() == totalUniqueTweets)
        {
            <h4>We counted a total of <span>@Model.Tweets.Count()</span> Tweets from 2016-2017. We sure hope this is the correct calculation!</h4>
            <p>Total Request Seconds: <strong>@Model.RequestSeconds</strong></p>
        }

    </div>
</div>
